{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageURL","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVpresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","TVPresenter","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","Searchpresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","SearchPresenter","Backdrop","bgImage","Content","Cover","Data","h3","ImdbContainer","Imdb","ItemContainer","Divider","Overview","p","Taps","TapItemContainer","DetailList","display","TapItem","TapsList","ol","CompanyMark","BgContainer","CompanyContainer","BgCompany","img","CompanyName","Country","SeasonImage","DetailPresenter","result","useState","flag","setFlag","company","setCompany","country","setCountry","season","setSeason","backdrop_path","href","imdb_id","external_ids","runtime","episode_run_time","genres","genre","index","name","overview","onClick","videos","detail","production_companies","src","logo_path","production_countries","origin_country","seasons","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38128429.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child) {\r\n        margin-bottom : 50px\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display : grid;\r\n  grid-template-columns : repeat(auto-fill, 125px);\r\n  grid-gap : 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height : 100vh;\r\n    width : 100vw;\r\n    display : flex;\r\n    justify-content : center;\r\n    font-size : 28px;\r\n    margin-top : 20px;\r\n`;\r\n\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-label='Loading'>\r\n            ⏰\r\n        </span>\r\n    </Container>\r\n)\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width : 100vw;\r\n    display : flex;\r\n    justify-content : center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n   color : ${props => props.color};\r\n`;\r\n\r\nconst Message = ({text, color}) => <Container><Text color={color}>{text}</Text></Container>\r\n\r\nMessage.propTypes = {\r\n    text : PropTypes.string.isRequired,\r\n    color : PropTypes.string.isRequired\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size:12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    background-image: url(${props=> props.bgUrl});\r\n    height : 180px;\r\n    background-size : cover;\r\n    border-radius : 4px;\r\n    background-position : center center;\r\n    transition : opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    position : absolute;\r\n    bottom: 5px;\r\n    right : 5px;\r\n    opacity:0;\r\n    transition : opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom : 5px;\r\n    &:hover{\r\n        ${Image} {\r\n            opacity:0.3;\r\n        }\r\n        ${Rating} {\r\n            opacity:1;\r\n        }\r\n    }\r\n    position : relative;\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display : block;\r\n    margin-bottom : 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size : 10px;\r\n    color :rgba(255,255,255,0.5);\r\n`;\r\n\r\nconst Poster = ({id, imageURL, title, rating, year, isMovie = false}) => (\r\n   <Link to = {isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image bgUrl = {imageURL ? `https://image.tmdb.org/t/p/w300${imageURL}` : require(\"../assets/noPosterSmall.png\")}/>\r\n                <Rating>\r\n                    <span role=\"img\" aria-label=\"rating\">\r\n                        ⭐\r\n                    </span>\r\n                    {rating}/10\r\n                </Rating>\r\n            </ImageContainer>\r\n            <Title>{title.length > 18 ? `${title.substring(0,18)}...` : title}</Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n   </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n    id : PropTypes.number.isRequired,\r\n    imageURL : PropTypes.string,\r\n    title : PropTypes.string.isRequired,\r\n    rating : PropTypes.number,\r\n    year : PropTypes.string,\r\n    isMovie : PropTypes.bool\r\n}\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Section from \"Components/Section\"\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\"\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\n\r\nconst Container = styled.div`\r\n    padding : 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) =>\r\n<>  \r\n    <Helmet>\r\n        <title>Movies | Wonflix</title>\r\n    </Helmet>\r\n    {loading ? <Loader/> : (\r\n        <Container>\r\n            {nowPlaying && nowPlaying.length > 0 && (\r\n                <Section title = \"Now Playing\">\r\n                    {nowPlaying.map(movie =>\r\n                        <Poster \r\n                            key={movie.id} \r\n                            id={movie.id} \r\n                            imageURL={movie.poster_path}\r\n                            title={movie.original_title} \r\n                            rating={movie.vote_average}\r\n                            year = {movie.release_date && movie.release_date.substring(0,4)}\r\n                            isMovie = {true}\r\n                        />\r\n                    )}\r\n                </Section>\r\n            )}\r\n            {upcoming && upcoming.length > 0 && (\r\n                <Section title = \"Upcoming Movies\">\r\n                    {upcoming.map(movie => \r\n                        <Poster \r\n                        key={movie.id} \r\n                        id={movie.id} \r\n                        imageURL={movie.poster_path}\r\n                        title={movie.original_title} \r\n                        rating={movie.vote_average}\r\n                        year = {movie.release_date && movie.release_date.substring(0,4)}\r\n                        isMovie = {true}\r\n                    />)}\r\n                </Section>\r\n            )}\r\n            {popular && popular.length > 0 && (\r\n                <Section title = \"Popular Movies\">\r\n                    {popular.map(movie => \r\n                        <Poster \r\n                        key={movie.id} \r\n                        id={movie.id} \r\n                        imageURL={movie.poster_path}\r\n                        title={movie.original_title} \r\n                        rating={movie.vote_average}\r\n                        year = {movie.release_date && movie.release_date.substring(0,4)}\r\n                        isMovie = {true}\r\n                    />)}\r\n                </Section>\r\n            )}\r\n            {error && <Message color=\"#e74c3c\" text={error}/>}\r\n        </Container>\r\n    )};\r\n</>\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying:PropTypes.array,\r\n    upcoming:PropTypes.array,\r\n    popular:PropTypes.array,\r\n    error:PropTypes.string,\r\n    loading:PropTypes.bool.isRequired\r\n}\r\nexport default HomePresenter;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL : \"https://api.themoviedb.org/3/\",\r\n    params : {\r\n        api_key : \"b343bd61310fc40e96dee59844448c95\",\r\n        language : \"en-US\"\r\n    }\r\n})\r\n\r\nexport const moviesApi = {\r\n    nowPlaying : () => api.get(\"movie/now_playing\"),\r\n    upcoming : () => api.get(\"movie/upcoming\"),\r\n    popular : () => api.get(\"movie/popular\"),\r\n    movieDetail : id => api.get(`movie/${id}` , {\r\n        params : {\r\n            append_to_response : \"videos\"\r\n        }\r\n    }),\r\n    search : term => api.get(\"search/movie\", {params : {\r\n        query : encodeURIComponent(term)\r\n    }})\r\n}\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: id =>\r\n      api.get(`tv/${id}`, {\r\n        params: {\r\n          append_to_response: \"videos,external_ids\"\r\n        }\r\n      }),\r\n    search: term =>\r\n      api.get(\"search/tv\", {\r\n        params: {\r\n          query: encodeURIComponent(term)\r\n        }\r\n      })\r\n  };\r\n\r\nexport default api;","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\"\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component{\r\n    state = {\r\n        nowPlaying : null,\r\n        upcoming : null,\r\n        popular : null,\r\n        error : null,\r\n        loading : true\r\n    }\r\n\r\n    async componentDidMount(){\r\n        try{\r\n            const {data : {results : nowPlaying}} = await moviesApi.nowPlaying();\r\n            const {data : {results : upcoming}} = await moviesApi.upcoming();\r\n            const {data : {results : popular}} = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying : nowPlaying,\r\n                upcoming : upcoming,\r\n                popular : popular\r\n            })\r\n        }catch{\r\n            this.setState({error : \"Can't find movie information.\"})\r\n        }finally{\r\n            this.setState({loading : false})\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading} = this.state;\r\n      \r\n        return (\r\n            <HomePresenter \r\n                nowPlaying = {nowPlaying}\r\n                upcoming = {upcoming}\r\n                popular = {popular}\r\n                error = {error}\r\n                loading = {loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding : 20px;\r\n`;\r\n\r\nconst TVpresenter = ({topRated, popular, airingToday, loading, error}) =>  \r\n<>    \r\n    <Helmet>\r\n        <title>TV Shows | Wonflix</title>\r\n    </Helmet>\r\n        {loading ? <Loader/> : (\r\n        <Container>\r\n            {topRated &&  topRated.length>0 && (\r\n                <Section title=\"Top Rated Shows\">\r\n                    {topRated.map(show =>\r\n                    <Poster \r\n                        key={show.id} \r\n                        id={show.id} \r\n                        imageURL={show.poster_path}\r\n                        title={show.original_name} \r\n                        rating={show.vote_average}\r\n                        year = {show.first_air_date && show.first_air_date.substring(0,4)}\r\n                    />\r\n                    )}\r\n                </Section>\r\n            )}\r\n            {popular && popular.length>0 && (\r\n                <Section title=\"Popular Shows\">\r\n                    {popular.map(show => \r\n                    <Poster \r\n                        key={show.id} \r\n                        id={show.id} \r\n                        imageURL={show.poster_path}\r\n                        title={show.original_name} \r\n                        rating={show.vote_average}\r\n                        year = {show.first_air_date && show.first_air_date.substring(0,4)}\r\n                    />\r\n                    )}\r\n                </Section>\r\n            )}\r\n            {airingToday && airingToday.length>0 && (\r\n                <Section title=\"Airing Today\">\r\n                    {airingToday.map(show => \r\n                    <Poster \r\n                        key={show.id} \r\n                        id={show.id} \r\n                        imageURL={show.poster_path}\r\n                        title={show.original_name} \r\n                        rating={show.vote_average}\r\n                        year = {show.first_air_date && show.first_air_date.substring(0,4)}\r\n                    />\r\n                    )}\r\n                </Section>\r\n            )}\r\n            {error && <Message color=\"#e74c3c\" text={error}/>}\r\n            </Container>\r\n        )}\r\n</>\r\n\r\nTVpresenter.propTypes = {\r\n    topRated:PropTypes.array,\r\n    popular:PropTypes.array,\r\n    airingToday:PropTypes.array,\r\n    loading:PropTypes.bool.isRequired,\r\n    error:PropTypes.string\r\n}\r\n\r\nexport default TVpresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try{\r\n      const {data : {results : topRated}} = await tvApi.topRated();\r\n      const {data : {results : popular}} = await tvApi.popular();\r\n      const {data : {results : airingToday}} =await  tvApi.airingToday();\r\n      this.setState({\r\n        topRated : topRated,\r\n        popular : popular,\r\n        airingToday : airingToday\r\n      })\r\n    }catch{\r\n      this.setState({error : \"Can't find TV information.\"})\r\n    }finally{\r\n      this.setState({loading : false})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom : 3px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\r\n  transition : border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({location : {pathname}}) => (\r\n    <Header>\r\n      <List>\r\n        <Item current={pathname === \"/\"}>\r\n          <SLink to=\"/\">Movies</SLink>\r\n        </Item>\r\n        <Item current={pathname === \"/tv\"}>\r\n          <SLink to=\"/tv\">TV</SLink>\r\n        </Item>\r\n        <Item current={pathname === \"/search\"}>\r\n          <SLink to=\"/search\">Search</SLink>\r\n        </Item>\r\n      </List>\r\n    </Header>\r\n  ));","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    padding : 0px 20px;\r\n`; \r\n\r\nconst Form = styled.form`\r\n    margin-bottom : 50px;\r\n    width:100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all:unset;\r\n    font-size : 28px;\r\n    width : 100%;\r\n`;\r\n\r\nconst Searchpresenter = ({movieResults, tvResults, searchTerm, loading, error, handleSubmit, updateTerm}) => \r\n<Container>\r\n        <Helmet>\r\n            <title>Search | Wonflix</title>\r\n        </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n        <Input \r\n            placeholder=\"Search Movies or TV Shows...\" \r\n            value={searchTerm}\r\n            onChange={updateTerm}\r\n        />\r\n    </Form>\r\n    {loading ? <Loader/> : <>\r\n        {movieResults && movieResults.length>0 && <Section title=\"Movie Results\">\r\n    {movieResults.map(movie =>   \r\n        <Poster \r\n            key={movie.id} \r\n            id={movie.id} \r\n            imageURL={movie.poster_path}\r\n            title={movie.original_title} \r\n            rating={movie.vote_average}\r\n            year = {movie.release_date && movie.release_date.substring(0,4)}\r\n            isMovie = {true}\r\n         />\r\n    )}\r\n    </Section>}\r\n    </>}\r\n    {loading ? <Loader/> : <>\r\n        {tvResults && tvResults.length>0 && <Section title=\"TV Show Results\">\r\n            {tvResults.map(show =>  \r\n                <Poster \r\n                    key={show.id} \r\n                    id={show.id} \r\n                    imageURL={show.poster_path}\r\n                    title={show.original_name} \r\n                    rating={show.vote_average}\r\n                    year = {show.first_air_date && show.first_air_date.substring(0,4)}\r\n                />)}\r\n        </Section>}\r\n    </>}\r\n    {error && <Message color=\"#e74c3c\" text={error}/>}\r\n    {movieResults && tvResults && movieResults.length===0 && tvResults.length===0 && <Message text=\"Nothing found\" color=\"#95a5a6\"/>}\r\n</Container>\r\n\r\nSearchpresenter.propTypes = {\r\n    movieResults:PropTypes.array,\r\n    tvResults:PropTypes.array,\r\n    error:PropTypes.string,\r\n    searchTerm:PropTypes.string,\r\n    loading:PropTypes.bool.isRequired,\r\n    handleSubmit : PropTypes.func.isRequired,\r\n    updateTerm : PropTypes.func.isRequired\r\n}\r\n \r\nexport default Searchpresenter;\r\n\r\n","import SearchContainer from \"./SearchContainer\"\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\"\r\nimport { moviesApi, tvApi } from \"api\"\r\n\r\nexport default class extends React.Component{\r\n\r\n    state = {\r\n        movieResults : null,\r\n        tvResults : null,\r\n        searchTerm : \"\",\r\n        loading : false,\r\n        error : null\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {searchTerm} = this.state;\r\n        if(searchTerm !== \"\"){\r\n            this.searchByTerm();\r\n        }\r\n    }\r\n\r\n    updateTerm = (event) => {\r\n        const { target : {value} } = event;\r\n        this.setState({searchTerm : value});\r\n    }\r\n\r\n    searchByTerm = async () => {\r\n        this.setState({loading : true});\r\n        const {searchTerm} = this.state;\r\n        try{\r\n            const {data : {results : movieResults}} = await moviesApi.search(searchTerm);\r\n            const {data : {results : tvResults}} = await tvApi.search(searchTerm);\r\n            this.setState({\r\n                movieResults,\r\n                tvResults\r\n            })\r\n        }catch{\r\n            this.setState({error : \"can't find result\"});\r\n        }finally{\r\n            this.setState({loading : false});\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {movieResults, tvResults, searchTerm, loading, error} = this.state;\r\n    \r\n        return (\r\n            <SearchPresenter\r\n                movieResults = {movieResults}\r\n                tvResults = {tvResults}\r\n                searchTerm = {searchTerm}\r\n                loading = {loading}\r\n                error = {error}\r\n                handleSubmit = {this.handleSubmit}\r\n                updateTerm = {this.updateTerm}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n    height : calc(100vh - 50px);\r\n    width : 100%;\r\n    position : relative;\r\n    padding : 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position : absolute;\r\n    top : 0;\r\n    left : 0;\r\n    width : 100%;\r\n    height : 100%;\r\n    background-image : url(${props => props.bgImage});\r\n    background-position : center center;\r\n    background-size : cover;\r\n    filter : blur(3px);\r\n    opacity : 0.5;\r\n    z-index : 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display : flex;\r\n    width : 100%;\r\n    position : relative;\r\n    z-index : 1;\r\n    height : 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width : 30%;\r\n    background-image : url(${props => props.bgImage});\r\n    background-position : center center;\r\n    background-size : cover;\r\n    height : 100%;\r\n    border-radius : 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width : 70%;\r\n    margin-left : 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size : 32px;\r\n`;\r\n\r\nconst ImdbContainer = styled.span`\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    margin-left: 10px;\r\n    text-align: center;\r\n    color: black;\r\n    padding: 0px 6px;\r\n    border-radius: 4px;\r\n    background: rgb(245, 197, 24);\r\n`;\r\n\r\nconst Imdb = styled.a`\r\n   \r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin : 20px 0;\r\n`;\r\n\r\nconst Item = styled.span`\r\n    \r\n`;\r\n\r\nconst Divider = styled.span`\r\n    margin : 0px 10px;\r\n`;\r\n\r\n\r\nconst Overview = styled.p`\r\n    font-size : 12px;\r\n    opacity : 0.7;\r\n    line-height : 1.5;\r\n    width : 50%;\r\n`;\r\n\r\nconst Taps = styled.div`\r\n    margin-top:30px;\r\n`;\r\n\r\nconst TapItemContainer = styled.div`\r\n    max-width: 500px;\r\n    max-height: 400px;\r\n    overflow-y: auto;\r\n    padding: 20px;\r\n`;\r\n\r\nconst DetailList = styled.a`\r\n    display: list-item;\r\n    text-align: -webkit-match-parent;\r\n    opacity: 0.5;\r\n    cursor: pointer;\r\n    \r\n    padding: 10px 20px;\r\n\r\n    &:hover{\r\n        opacity : 1;\r\n    } \r\n   \r\n    display: ${props => props.display};\r\n`;\r\n\r\nconst TapItem = styled.li`\r\n \r\n    display: list-item;\r\n    text-align: -webkit-match-parent;\r\n    opacity: 0.5;\r\n    cursor: pointer;\r\n    border-bottom: 2px solid rgba(255, 255, 255, 0.5);\r\n    padding: 10px 30px;\r\n\r\n    &:hover{\r\n        opacity : 1;\r\n    }\r\n\r\n    &:active{\r\n        opacity : 1;\r\n    }\r\n\r\n   \r\n`;\r\n\r\nconst TapsList = styled.ol`\r\n    margin-top: 50px;\r\n    display: flex;\r\n    list-style: none;\r\n    margin-block-start: 1em;\r\n    margin-block-end: 1em;\r\n    margin-inline-start: 0px;\r\n    margin-inline-end: 0px;\r\n    \r\n`;\r\n\r\nconst CompanyMark = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n    width: 400px;\r\n`;\r\n\r\nconst BgContainer = styled.div`\r\n   margin-bottom: 20px;\r\n    margin-right: 30px;\r\n    opacity: 0.7;\r\n    text-align: center;\r\n    &:hover{\r\n        opacity : 1;\r\n    } \r\n`;\r\n\r\nconst CompanyContainer = styled.div`\r\n    height: 60px;\r\n    display: flex;\r\n    -webkit-box-align: center;\r\n    align-items: center;\r\n    -webkit-box-pack: center;\r\n    justify-content: center;\r\n    max-width: 100px;\r\n    \r\n`;\r\n\r\n\r\nconst BgCompany = styled.img`\r\n\r\n    max-width: 100px;\r\n    max-height: 50px;\r\n    margin-bottom: 10px;\r\n    display: block;\r\n\r\n`\r\nconst CompanyName = styled.div`\r\n    font-size: 10px;\r\n    opacity: 0.5;\r\n    max-width: 100px;\r\n`;\r\n\r\nconst Country = styled.div`\r\n    max-width: 500px;\r\n    max-height: 400px;\r\n    overflow-y: auto;\r\n    padding: 20px;\r\n    margin-bottom: 10px;\r\n    opacity: 0.5;\r\n       &:hover {\r\n        opacity: 1;\r\n    }\r\n`;\r\n\r\nconst SeasonImage = styled.img`\r\n    max-width: 60px;\r\n    display: block;\r\n`;\r\n\r\nconst A = styled.div`\r\n    display:flex\r\n`;\r\n\r\nconst B = styled.img``;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) => {\r\n\r\n    const [flag, setFlag] = useState(false);\r\n    const [company, setCompany] = useState(true);\r\n    const [country, setCountry] = useState(true);\r\n    const [season, setSeason] = useState(true);\r\n\r\n    return (\r\n        loading ? (\r\n            <>\r\n                <Loader />\r\n                <Helmet>\r\n                    <title>Loading | Wonflix</title>\r\n                </Helmet>\r\n            </>\r\n        ) :\r\n            <Container>\r\n                <Helmet>\r\n                    <title>{result.original_title ? result.original_title : result.original_name} | Wonflix</title>\r\n                </Helmet>\r\n                <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\r\n                <Content>\r\n                    <Cover bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"../../assets/noPosterSmall.png\")} />\r\n                    <Data>\r\n                        <Title>\r\n                            {result.original_title ? result.original_title : result.original_name}\r\n                            <ImdbContainer>\r\n                                <Imdb href={result.imdb_id ? `https://www.imdb.com/title/${result.imdb_id}` : `https://www.imdb.com/title/${result.external_ids.imdb_id}`} target=\"_blank\">IMDB</Imdb>\r\n                            </ImdbContainer>\r\n\r\n                        </Title>\r\n                        <ItemContainer>\r\n                            <Item>\r\n                                {result.first_air_date ? result.first_air_date.substring(0, 4) : result.release_date.substring(0, 4)}\r\n                            </Item>\r\n                            <Divider>•</Divider>\r\n                            <Item>\r\n                                {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n                            </Item>\r\n                            <Divider>•</Divider>\r\n                            <Item>\r\n                                {result.genres && result.genres.map((genre, index) => index === result.genres.length - 1 ? genre.name : `${genre.name} / `)}\r\n                            </Item>\r\n                        </ItemContainer>\r\n                        <Overview>{result.overview}</Overview>\r\n                        {/* <ItemContainer>\r\n                        {result.videos.results.map(detail => <ItemContainer key={detail.id}><Imdb href={`https://www.youtube.com/watch?v=${detail.key}`} target=\"_blank\" >{detail.name}</Imdb><ItemContainer><iframe src={`https://www.youtube.com/embed/${detail.key}` } key={detail.id} width=\"500\" height=\"282\" title={detail.name}></iframe></ItemContainer></ItemContainer>)}\r\n                    </ItemContainer> */}\r\n                        <Taps>\r\n                            <TapsList>\r\n                                <TapItem onClick={() => {\r\n                                    setFlag(false);\r\n                                    setCountry(true);\r\n                                    setCompany(true);\r\n                                    setSeason(true);\r\n                                }}>\r\n                                    Videos\r\n                                   \r\n                                </TapItem>\r\n                                <TapItem onClick={() => {\r\n                                    setFlag(true);\r\n                                    setCountry(true);\r\n                                    setSeason(true);\r\n                                    setCompany(false);\r\n                                }}>Companies</TapItem>\r\n                                <TapItem onClick={() => {\r\n                                    setFlag(true);\r\n                                    setCompany(true);\r\n                                    setSeason(true);\r\n                                    setCountry(false);\r\n                                }}>Countries</TapItem>\r\n                                <TapItem onClick={() => {\r\n                                    setFlag(true);\r\n                                    setCompany(true);\r\n                                    setCountry(true); \r\n                                    setSeason(false);\r\n                                }} >Series</TapItem>\r\n                            </TapsList>\r\n                        </Taps>\r\n                            {flag ? null : result.videos.results.map(detail => <DetailList key={detail.id} display={ flag  ? \"none\" : \"block\"} href={`https://www.youtube.com/watch?v=${detail.key}`} target=\"_blank\">{detail.name}</DetailList>)}\r\n                            {company ? null :result.production_companies.map(detail =><TapItemContainer><CompanyMark><BgContainer><CompanyContainer><BgCompany  key={detail.id} src={detail.logo_path ? `https://image.tmdb.org/t/p/original${detail.logo_path}` :  require(\"../../assets/noPosterSmall.png\")}></BgCompany></CompanyContainer><CompanyName key={detail.id}>{detail.name}</CompanyName></BgContainer></CompanyMark></TapItemContainer>)}\r\n                            {result.production_countries ? country ? null : result.production_countries.map(detail => <Country>{detail.name}</Country>) :  country ? null : result.production_companies.map(detail => <ItemContainer><Country>{detail.origin_country}</Country></ItemContainer>)}\r\n                            {result.seasons ?  season ? null : result.seasons.map(detail =><TapItemContainer><BgContainer><SeasonImage  key={detail.id} src={detail.poster_path ? `https://image.tmdb.org/t/p/original${detail.poster_path}` : require(\"../../assets/noPosterSmall.png\")}></SeasonImage></BgContainer><Overview>{detail.name}</Overview></TapItemContainer> ) : <></>}\r\n                    </Data>\r\n                </Content>\r\n            </Container>\r\n    )\r\n\r\n}\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        const {location : { pathname }} = props;\r\n        this.state = {\r\n            result : null,\r\n            error : null,\r\n            loading : true,\r\n            isMovie : pathname.includes(\"/movie/\"),\r\n        }\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        const {match : {params : {id}}, history : {push}} = this.props;\r\n        const parsedId = parseInt(id);\r\n        const {isMovie} = this.state;\r\n\r\n        if(isNaN(parsedId)){\r\n           return push(\"/\");\r\n        }\r\n\r\n        let result = null;\r\n        try{\r\n            if(isMovie){\r\n                ({data : result} = await moviesApi.movieDetail(parsedId))\r\n            }else{\r\n                ({data : result} = await tvApi.showDetail(parsedId))\r\n            }\r\n        }catch{\r\n            this.setState({error : \"Can't find anything.\"});\r\n        }finally{\r\n            this.setState({loading : false, result})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {result, error, loading} = this.state;\r\n\r\n        return(\r\n            <DetailPresenter\r\n                result = {result}\r\n                error = {error}\r\n                loading = {loading}\r\n            />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Header from \"Components/Header\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\"\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path =\"/movie/:id\" component = {Detail} />\r\n        <Route path =\"/show/:id\" component = {Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n\r\n","import React from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from \"Components/GlobalStyles\";\n\n\nfunction App() {\n  return (\n    <>\n      <Router/>\n      <GlobalStyles/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App'\nimport \"./api\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}